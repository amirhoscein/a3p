{"ast":null,"code":"var _jsxFileName = \"D:\\\\React tamrin\\\\a3P\\\\asli\\\\src\\\\context\\\\ProductContextProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, createContext } from \"react\";\nimport { getProduct } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductsContext = /*#__PURE__*/createContext();\nconst ProductContextProvider = ({\n  children\n}) => {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setProducts(await getProducts());\n    };\n    fetchAPI();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ProductsContext.Provider, {\n    value: products,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductContextProvider, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = ProductContextProvider;\nexport default ProductContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ProductContextProvider\");","map":{"version":3,"names":["React","useEffect","useState","createContext","getProduct","jsxDEV","_jsxDEV","ProductsContext","ProductContextProvider","children","_s","products","setProducts","fetchAPI","getProducts","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React tamrin/a3P/asli/src/context/ProductContextProvider.js"],"sourcesContent":["import React, { useEffect, useState, createContext } from \"react\";\r\n\r\nimport { getProduct } from \"../services/api\";\r\n\r\nexport const ProductsContext = createContext();\r\n\r\nconst ProductContextProvider = ({ children }) => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setProducts(await getProducts());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <ProductsContext.Provider value={products}>\r\n      {children}\r\n    </ProductsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ProductContextProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,aAAa,QAAQ,OAAO;AAEjE,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,OAAO,MAAMC,eAAe,gBAAGJ,aAAa,CAAC,CAAC;AAE9C,MAAMK,sBAAsB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMY,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3BD,WAAW,CAAC,MAAME,WAAW,CAAC,CAAC,CAAC;IAClC,CAAC;IAEDD,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACC,eAAe,CAACQ,QAAQ;IAACC,KAAK,EAAEL,QAAS;IAAAF,QAAA,EACvCA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACV,EAAA,CAhBIF,sBAAsB;AAAAa,EAAA,GAAtBb,sBAAsB;AAkB5B,eAAeA,sBAAsB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}