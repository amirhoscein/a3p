{"ast":null,"code":"export var validate=function validate(data,type){var errors={};if(!data.email){errors.email=\"email required\";}else if(!/\\S+@\\S+\\.\\S+/.test(data.email)){errors.email=\"email address is invalid\";}else{delete errors.email;}if(!data.password){errors.password=\"password is required\";}else if(data.password.length<6){errors.password=\"password need to be 6 characters or more\";}else{delete errors.password;}if(type===\"signup\"){if(!data.name.trim()){errors.name=\"userName required\";}else if(data.name.length<4){errors.name=\"name is < 4 character\";}else{delete errors.name;}if(!data.confirmPassword){errors.confirmPassword=\"confirm the password\";}else if(data.confirmPassword!==data.password){errors.confirmPassword=\"password do not match\";}else{delete errors.confirmPassword;}if(data.isAccepted){delete errors.isAccepted;}else{errors.isAccepted=\"qabollesh kon \";}}return errors;};","map":{"version":3,"names":["validate","data","type","errors","email","test","password","length","name","trim","confirmPassword","isAccepted"],"sources":["D:/React tamrin/a3P/asli/src/components/validate.js"],"sourcesContent":["export const validate = (data, type) => {\r\n  const errors = {};\r\n\r\n  if (!data.email) {\r\n    errors.email = \"email required\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(data.email)) {\r\n    errors.email = \"email address is invalid\";\r\n  } else {\r\n    delete errors.email;\r\n  }\r\n  if (!data.password) {\r\n    errors.password = \"password is required\";\r\n  } else if (data.password.length < 6) {\r\n    errors.password = \"password need to be 6 characters or more\";\r\n  } else {\r\n    delete errors.password;\r\n  }\r\n\r\n  if (type === \"signup\") {\r\n    if (!data.name.trim()) {\r\n      errors.name = \"userName required\";\r\n    } else if (data.name.length < 4) {\r\n      errors.name = \"name is < 4 character\";\r\n    } else {\r\n      delete errors.name;\r\n    }\r\n    if (!data.confirmPassword) {\r\n      errors.confirmPassword = \"confirm the password\";\r\n    } else if (data.confirmPassword !== data.password) {\r\n      errors.confirmPassword = \"password do not match\";\r\n    } else {\r\n      delete errors.confirmPassword;\r\n    }\r\n    if (data.isAccepted) {\r\n      delete errors.isAccepted;\r\n    } else {\r\n      errors.isAccepted = \"qabollesh kon \";\r\n    }\r\n  }\r\n  return errors;\r\n};\r\n"],"mappings":"AAAA,MAAO,IAAM,CAAAA,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,IAAI,CAAEC,IAAI,CAAK,CACtC,GAAM,CAAAC,MAAM,CAAG,CAAC,CAAC,CAEjB,GAAI,CAACF,IAAI,CAACG,KAAK,CAAE,CACfD,MAAM,CAACC,KAAK,CAAG,gBAAgB,CACjC,CAAC,IAAM,IAAI,CAAC,cAAc,CAACC,IAAI,CAACJ,IAAI,CAACG,KAAK,CAAC,CAAE,CAC3CD,MAAM,CAACC,KAAK,CAAG,0BAA0B,CAC3C,CAAC,IAAM,CACL,MAAO,CAAAD,MAAM,CAACC,KAAK,CACrB,CACA,GAAI,CAACH,IAAI,CAACK,QAAQ,CAAE,CAClBH,MAAM,CAACG,QAAQ,CAAG,sBAAsB,CAC1C,CAAC,IAAM,IAAIL,IAAI,CAACK,QAAQ,CAACC,MAAM,CAAG,CAAC,CAAE,CACnCJ,MAAM,CAACG,QAAQ,CAAG,0CAA0C,CAC9D,CAAC,IAAM,CACL,MAAO,CAAAH,MAAM,CAACG,QAAQ,CACxB,CAEA,GAAIJ,IAAI,GAAK,QAAQ,CAAE,CACrB,GAAI,CAACD,IAAI,CAACO,IAAI,CAACC,IAAI,CAAC,CAAC,CAAE,CACrBN,MAAM,CAACK,IAAI,CAAG,mBAAmB,CACnC,CAAC,IAAM,IAAIP,IAAI,CAACO,IAAI,CAACD,MAAM,CAAG,CAAC,CAAE,CAC/BJ,MAAM,CAACK,IAAI,CAAG,uBAAuB,CACvC,CAAC,IAAM,CACL,MAAO,CAAAL,MAAM,CAACK,IAAI,CACpB,CACA,GAAI,CAACP,IAAI,CAACS,eAAe,CAAE,CACzBP,MAAM,CAACO,eAAe,CAAG,sBAAsB,CACjD,CAAC,IAAM,IAAIT,IAAI,CAACS,eAAe,GAAKT,IAAI,CAACK,QAAQ,CAAE,CACjDH,MAAM,CAACO,eAAe,CAAG,uBAAuB,CAClD,CAAC,IAAM,CACL,MAAO,CAAAP,MAAM,CAACO,eAAe,CAC/B,CACA,GAAIT,IAAI,CAACU,UAAU,CAAE,CACnB,MAAO,CAAAR,MAAM,CAACQ,UAAU,CAC1B,CAAC,IAAM,CACLR,MAAM,CAACQ,UAAU,CAAG,gBAAgB,CACtC,CACF,CACA,MAAO,CAAAR,MAAM,CACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}