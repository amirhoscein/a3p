{"ast":null,"code":"var _jsxFileName = \"D:\\\\React tamrin\\\\a3P\\\\asli\\\\src\\\\components\\\\Hometakhfif.js\";\nimport React from \"react\";\nimport styles from \"../assets/css/home.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hometakhfif = () => {\n  const countDownDate = new Date(\"Dec 12, 2023 15:37:25\").getTime();\n\n  // Update the count down every 1 second\n  const x = setInterval(function () {\n    // Get today's date and time\n    const now = new Date().getTime();\n\n    // Find the distance between now and the count down date\n    const distance = countDownDate - now;\n\n    // Time calculations for days, hours, minutes and seconds\n    const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n    const hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n    const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n    const seconds = Math.floor(distance % (1000 * 60) / 1000);\n\n    // Output the result in an element with id=\"demo\"\n    document.getElementById(\"demo\").innerHTML = days + \" : \" + hours + \" : \" + minutes + \" : \" + seconds;\n\n    // If the count down is over, write some text\n    if (distance < 0) {\n      clearInterval(x);\n      document.getElementById(\"demo\").innerHTML = \"EXPIRED\";\n    }\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.takhfif,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: \"#ffc107\",\n        fontWeight: \"bold\"\n      },\n      children: \"Discount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: \"0\",\n        textShadow: \"2px -3px 3px black\",\n        overflow: \"hidden\"\n      },\n      id: \"demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"txtclock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = Hometakhfif;\nexport default Hometakhfif;\nvar _c;\n$RefreshReg$(_c, \"Hometakhfif\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","Hometakhfif","countDownDate","Date","getTime","x","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","document","getElementById","innerHTML","clearInterval","className","takhfif","children","style","color","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","margin","textShadow","overflow","id","_c","$RefreshReg$"],"sources":["D:/React tamrin/a3P/asli/src/components/Hometakhfif.js"],"sourcesContent":["import React from \"react\";\r\nimport styles from \"../assets/css/home.module.css\";\r\nconst Hometakhfif = () => {\r\n  const countDownDate = new Date(\"Dec 12, 2023 15:37:25\").getTime();\r\n\r\n  // Update the count down every 1 second\r\n  const x = setInterval(function () {\r\n    // Get today's date and time\r\n    const now = new Date().getTime();\r\n\r\n    // Find the distance between now and the count down date\r\n    const distance = countDownDate - now;\r\n\r\n    // Time calculations for days, hours, minutes and seconds\r\n    const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n    const hours = Math.floor(\r\n      (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n    );\r\n    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n    const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n    // Output the result in an element with id=\"demo\"\r\n    document.getElementById(\"demo\").innerHTML =\r\n      days + \" : \" + hours + \" : \" + minutes + \" : \" + seconds;\r\n\r\n    // If the count down is over, write some text\r\n    if (distance < 0) {\r\n      clearInterval(x);\r\n      document.getElementById(\"demo\").innerHTML = \"EXPIRED\";\r\n    }\r\n  }, 1000);\r\n  return (\r\n    <section className={styles.takhfif}>\r\n      <span style={{ color: \"#ffc107\", fontWeight: \"bold\" }}>Discount</span>\r\n      <p\r\n        style={{\r\n          margin: \"0\",\r\n          textShadow: \"2px -3px 3px black\",\r\n          overflow: \"hidden\",\r\n        }}\r\n        id=\"demo\"\r\n      ></p>\r\n      <div id=\"txtclock\"></div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Hometakhfif;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,MAAMC,aAAa,GAAG,IAAIC,IAAI,CAAC,uBAAuB,CAAC,CAACC,OAAO,CAAC,CAAC;;EAEjE;EACA,MAAMC,CAAC,GAAGC,WAAW,CAAC,YAAY;IAChC;IACA,MAAMC,GAAG,GAAG,IAAIJ,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;;IAEhC;IACA,MAAMI,QAAQ,GAAGN,aAAa,GAAGK,GAAG;;IAEpC;IACA,MAAME,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACzD,MAAMI,KAAK,GAAGF,IAAI,CAACC,KAAK,CACrBH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CACtD,CAAC;IACD,MAAMK,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAEH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC;IACvE,MAAMM,OAAO,GAAGJ,IAAI,CAACC,KAAK,CAAEH,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,IAAI,CAAC;;IAE3D;IACAO,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACC,SAAS,GACvCR,IAAI,GAAG,KAAK,GAAGG,KAAK,GAAG,KAAK,GAAGC,OAAO,GAAG,KAAK,GAAGC,OAAO;;IAE1D;IACA,IAAIN,QAAQ,GAAG,CAAC,EAAE;MAChBU,aAAa,CAACb,CAAC,CAAC;MAChBU,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACC,SAAS,GAAG,SAAS;IACvD;EACF,CAAC,EAAE,IAAI,CAAC;EACR,oBACEjB,OAAA;IAASmB,SAAS,EAAErB,MAAM,CAACsB,OAAQ;IAAAC,QAAA,gBACjCrB,OAAA;MAAMsB,KAAK,EAAE;QAAEC,KAAK,EAAE,SAAS;QAAEC,UAAU,EAAE;MAAO,CAAE;MAAAH,QAAA,EAAC;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACtE5B,OAAA;MACEsB,KAAK,EAAE;QACLO,MAAM,EAAE,GAAG;QACXC,UAAU,EAAE,oBAAoB;QAChCC,QAAQ,EAAE;MACZ,CAAE;MACFC,EAAE,EAAC;IAAM;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACL5B,OAAA;MAAKgC,EAAE,EAAC;IAAU;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEd,CAAC;AAACK,EAAA,GA3CIhC,WAAW;AA6CjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}