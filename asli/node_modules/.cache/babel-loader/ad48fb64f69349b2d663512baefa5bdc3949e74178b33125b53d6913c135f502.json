{"ast":null,"code":"export const validate = (data, type) => {\n  const errors = {};\n  if (!data.email) {\n    errors.email = \"email required\";\n  } else if (!/\\S+@\\S+\\.\\S+/.test(data.email)) {\n    errors.email = \"email address is invalid\";\n  } else {\n    delete errors.email;\n  }\n  if (!data.password) {\n    errors.password = \"password is required\";\n  } else if (data.password.length < 6) {\n    errors.password = \"password need to be 6 characters or more\";\n  } else {\n    delete errors.password;\n  }\n  if (type === \"signup\") {\n    if (!data.name.trim()) {\n      errors.name = \"userName required\";\n    } else if (data.name.length < 4) {\n      errors.name = \"name is < 4 character\";\n    } else {\n      delete errors.name;\n    }\n    if (!data.confirmPassword) {\n      errors.confirmPassword = \"confirm the password\";\n    } else if (data.confirmPassword !== data.password) {\n      errors.confirmPassword = \"password do not match\";\n    } else {\n      delete errors.confirmPassword;\n    }\n    if (data.isAccepted) {\n      delete errors.isAccepted;\n    } else {\n      errors.isAccepted = \"qabollesh kon \";\n    }\n  }\n  return errors;\n};","map":{"version":3,"names":["validate","data","type","errors","email","test","password","length","name","trim","confirmPassword","isAccepted"],"sources":["D:/React tamrin/a3P/asli/src/components/validate.js"],"sourcesContent":["export const validate = (data, type) => {\r\n  const errors = {};\r\n\r\n  if (!data.email) {\r\n    errors.email = \"email required\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(data.email)) {\r\n    errors.email = \"email address is invalid\";\r\n  } else {\r\n    delete errors.email;\r\n  }\r\n  if (!data.password) {\r\n    errors.password = \"password is required\";\r\n  } else if (data.password.length < 6) {\r\n    errors.password = \"password need to be 6 characters or more\";\r\n  } else {\r\n    delete errors.password;\r\n  }\r\n\r\n  if (type === \"signup\") {\r\n    if (!data.name.trim()) {\r\n      errors.name = \"userName required\";\r\n    } else if (data.name.length < 4) {\r\n      errors.name = \"name is < 4 character\";\r\n    } else {\r\n      delete errors.name;\r\n    }\r\n    if (!data.confirmPassword) {\r\n      errors.confirmPassword = \"confirm the password\";\r\n    } else if (data.confirmPassword !== data.password) {\r\n      errors.confirmPassword = \"password do not match\";\r\n    } else {\r\n      delete errors.confirmPassword;\r\n    }\r\n    if (data.isAccepted) {\r\n      delete errors.isAccepted;\r\n    } else {\r\n      errors.isAccepted = \"qabollesh kon \";\r\n    }\r\n  }\r\n  return errors;\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK;EACtC,MAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,IAAI,CAACF,IAAI,CAACG,KAAK,EAAE;IACfD,MAAM,CAACC,KAAK,GAAG,gBAAgB;EACjC,CAAC,MAAM,IAAI,CAAC,cAAc,CAACC,IAAI,CAACJ,IAAI,CAACG,KAAK,CAAC,EAAE;IAC3CD,MAAM,CAACC,KAAK,GAAG,0BAA0B;EAC3C,CAAC,MAAM;IACL,OAAOD,MAAM,CAACC,KAAK;EACrB;EACA,IAAI,CAACH,IAAI,CAACK,QAAQ,EAAE;IAClBH,MAAM,CAACG,QAAQ,GAAG,sBAAsB;EAC1C,CAAC,MAAM,IAAIL,IAAI,CAACK,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;IACnCJ,MAAM,CAACG,QAAQ,GAAG,0CAA0C;EAC9D,CAAC,MAAM;IACL,OAAOH,MAAM,CAACG,QAAQ;EACxB;EAEA,IAAIJ,IAAI,KAAK,QAAQ,EAAE;IACrB,IAAI,CAACD,IAAI,CAACO,IAAI,CAACC,IAAI,CAAC,CAAC,EAAE;MACrBN,MAAM,CAACK,IAAI,GAAG,mBAAmB;IACnC,CAAC,MAAM,IAAIP,IAAI,CAACO,IAAI,CAACD,MAAM,GAAG,CAAC,EAAE;MAC/BJ,MAAM,CAACK,IAAI,GAAG,uBAAuB;IACvC,CAAC,MAAM;MACL,OAAOL,MAAM,CAACK,IAAI;IACpB;IACA,IAAI,CAACP,IAAI,CAACS,eAAe,EAAE;MACzBP,MAAM,CAACO,eAAe,GAAG,sBAAsB;IACjD,CAAC,MAAM,IAAIT,IAAI,CAACS,eAAe,KAAKT,IAAI,CAACK,QAAQ,EAAE;MACjDH,MAAM,CAACO,eAAe,GAAG,uBAAuB;IAClD,CAAC,MAAM;MACL,OAAOP,MAAM,CAACO,eAAe;IAC/B;IACA,IAAIT,IAAI,CAACU,UAAU,EAAE;MACnB,OAAOR,MAAM,CAACQ,UAAU;IAC1B,CAAC,MAAM;MACLR,MAAM,CAACQ,UAAU,GAAG,gBAAgB;IACtC;EACF;EACA,OAAOR,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}